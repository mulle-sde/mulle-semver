#! /usr/bin/env bash
#
#   Copyright (c) 2021 Nat! - Mulle kybernetiK
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are met:
#
#   Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
#   Neither the name of Mulle kybernetiK nor the names of its contributors
#   may be used to endorse or promote products derived from this software
#   without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
[ "${TRACE}" = 'YES' -o "${MULLE_SEMVER_TRACE}" = 'YES' ] && set -x && : "$0" "$@"


MULLE_EXECUTABLE_VERSION="0.0.1"


trap_fail()
{
   exit 1
}


mulle_semver_print_flags()
{
   options_technical_flags_usage "       : "
}


mulle_semver_usage()
{
   [ $# -ne 0 ] && log_error "$*"

   cat <<EOF >&2
Usage:
   ${MULLE_USAGE_NAME} [flags] <command> [options]

   Parse and compare semver strings and evaluate semver expressions.

Commands:
   alphanumeric-compare <alphanumeric> <alphanumeric>
   compare <semver> <semver>
   qualify <qualifier> <version>
   numeric-compare <number> <number>
   parse <semver>
   search <qualifier> <version>*

Flags:
EOF
   mulle_semver_print_flags | LC_ALL=C sort >&2

   exit 1
}


main()
{
   local MULLE_FLAG_MAGNUM_FORCE='NO'

   # technical flags
   local MULLE_TRACE
   local MULLE_FLAG_EXEKUTOR_DRY_RUN='NO'
   local MULLE_FLAG_LOG_LOCAL='NO'
   local MULLE_FLAG_LOG_DEBUG='NO'
   local MULLE_FLAG_LOG_EXEKUTOR='NO'
   local MULLE_FLAG_LOG_FLUFF='NO'
   local MULLE_FLAG_LOG_SCRIPTS='NO'
   local MULLE_FLAG_LOG_SETTINGS='NO'
   local MULLE_FLAG_LOG_VERBOSE='NO'
   local MULLE_FLAG_LOG_MERGE='NO'
   local MULLE_TRACE_POSTPONE='NO'

   #
   # simple option handling
   #
   while [ $# -ne 0 ]
   do
      if options_technical_flags "$1"
      then
         shift
         continue
      fi

      case "$1" in
         -h*|--help|help)
            usage
         ;;

         -*)
            "mulle_semver_usage" "Unknown option \"$1\""
         ;;

         *)
            break
         ;;
      esac

      shift
   done

   options_setup_trace "${MULLE_TRACE}"

   shopt -s extglob
   set -o noglob

   local cmd="$1"
   [ $# -eq 0 ] || shift

   case "${cmd}" in
      'parse'|'numeric-compare'|'alphanumeric-compare'|'compare')
         # when you rename command, search for '***' and rename as well
         # shellcheck source=src/mulle-semver-parse.sh
         . "${MULLE_SEMVER_LIBEXEC_DIR}/mulle-semver-parse.sh"

         semver_${cmd//-/_}_main "$@"
      ;;

      'qualify')
         # shellcheck source=src/mulle-semver-qualify.sh
         . "${MULLE_SEMVER_LIBEXEC_DIR}/mulle-semver-qualify.sh"

         semver_qualify_main "$@"
      ;;

      'qualifier-type')
         # shellcheck source=src/mulle-semver-qualify.sh
         . "${MULLE_SEMVER_LIBEXEC_DIR}/mulle-semver-qualify.sh"

         semver_qualifier_type_main "$@"
      ;;

      'sort')
         # shellcheck source=src/mulle-semver-sort.sh
         . "${MULLE_SEMVER_LIBEXEC_DIR}/mulle-semver-sort.sh"

         semver_sort_main "$@"
      ;;

      'search')
         # shellcheck source=src/mulle-semver-search.sh
         . "${MULLE_SEMVER_LIBEXEC_DIR}/mulle-semver-search.sh"

         semver_search_main "$@"
      ;;

      'version')
         printf "%s\n" "${MULLE_EXECUTABLE_VERSION}"
      ;;

      "")
         mulle_semver_usage
      ;;

      *)
         # add commands simply by creating new files
         if [ ! -f "${MULLE_SEMVER_LIBEXEC_DIR}/mulle-semver-${cmd}.sh" ]
         then
            usage "Unknown command \"${cmd}\""
         fi
         . "${MULLE_SEMVER_LIBEXEC_DIR}/mulle-semver-${cmd}.sh"

         "mulle_semver_${cmd}_main" "$@"
      ;;
   esac
}


########
###
### INIT
###
_init()
{
   #
   # minimal setup exit
   #
   if [ "$1" = "version" ]
   then
      printf "%s\n" "${MULLE_EXECUTABLE_VERSION}"
      exit 0
   fi

   #
   # leading backslash ? looks like we're getting called from
   # mingw via a .BAT or so
   #
   case "$PATH" in
      '\\'*)
         PATH="${PATH//\\/\/}"
      ;;
   esac

   if [ -z "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}" ]
   then
      MULLE_BASHFUNCTIONS_LIBEXEC_DIR="`mulle-bashfunctions-env libexec-dir 2> /dev/null`"
      if [ -z "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}" ]
      then
         if [ -z "`command -v 'mulle-bashfunctions-env'`" ]
         then
            echo "Fatal Error: Could not find mulle-bashfunctions-env in PATH ($PATH) - mulle-bashfunctions not installed ?" >&2
         else
            echo "Fatal Error: Could not find libexec-dir of mulle-bashfunctions-env ($PWD)" >&2
         fi
         exit 1
      fi
   fi

      # shellcheck source=../mulle-bashfunctions/src/mulle-bashfunctions.sh
   . "${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}/mulle-bashfunctions.sh" ||
      fail "failed to load bashfunctions from ${MULLE_BASHFUNCTIONS_LIBEXEC_DIR}"

   ### *** ###
   r_get_libexec_dir "$0" "mulle-semver" "mulle-semver-parse.sh"
   MULLE_SEMVER_LIBEXEC_DIR="${RVAL}"

   #
   # minimal setup exit
   #
   case "$1" in
      "libexec-dir")
         printf "%s\n" "${MULLE_SEMVER_LIBEXEC_DIR}"
         exit 0
      ;;
   esac


   #  set -e # more pain then gain in the end
   #  set -u # doesn't work with my style

   trap trap_fail INT
   set -o pipefail

   call_main "${MULLE_SEMVER_FLAGS}" "$@"
}

_init "$@"

###
### INIT
###
########
